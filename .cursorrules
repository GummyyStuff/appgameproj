# Project Rules for Cursor AI

## Package Manager - Bun
Always use Bun instead of npm, yarn, or pnpm for all package management operations.

### Commands
- Install: `bun install` (not `npm install`)
- Add packages: `bun add <package>`
- Add dev dependencies: `bun add -d <package>`
- Run scripts: `bun run <script>`
- Run TypeScript: `bun <file.ts>`
- Tests: `bun test`

## Testing
Use Bun's built-in test runner:
```typescript
import { test, expect, describe } from "bun:test";
```

## Git Usage
**CRITICAL**: Never use git commands without explicit user permission in the same prompt.
- Never commit without user interaction
- Never use git push, reset, or other destructive operations unless explicitly requested

## Documentation and Markdown Files
**IMPORTANT**: Do NOT create markdown documentation files unless explicitly requested by the user.

### Rules:
1. **No automatic documentation creation** - Don't create .md files as summaries, guides, or documentation
2. **Communicate in chat** - Provide information, summaries, and explanations directly in the chat response
3. **Only create markdown when asked** - If the user says "create a markdown file" or "document this in a file", then you may create one
4. **Keep project root clean** - Avoid cluttering the root directory with documentation files

### Examples:
❌ **Don't do this:**
- Creating "IMPLEMENTATION_SUMMARY.md" after completing a task
- Creating "SECURITY_GUIDE.md" after implementing security features
- Creating "DEPLOYMENT_CHECKLIST.md" after deployment discussions
- Creating any .md file without explicit request

✅ **Do this instead:**
- Provide summaries directly in chat
- Use code comments for technical documentation
- Wait for explicit request like "can you create a markdown file documenting this?"

### Exception:
- **README.md** in appropriate directories is acceptable for essential project information
- Markdown files explicitly requested by the user

## Authentication Pattern
- Frontend uses Appwrite Client SDK for Discord OAuth only
- All authenticated API calls must include `X-Appwrite-User-Id` header
- Backend validates user existence in database
- Use `criticalAuthMiddleware` for sensitive operations (bets, balance, profile updates)

## Environment
- WSL Ubuntu on Windows
- Sudo password: "pepito" (if needed)

## Conflict Resolution
If new information conflicts with old information:
1. Check documentation and MCPs if available
2. Usually favor new methods
3. Update these rules if pattern changes

## Learning
If you discover useful patterns or information about the project, suggest adding it to .cursorrules rather than creating a separate markdown file.

